<VirtualHost *:80>
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	# ServerName www.example.com
	ServerName $CRDS_SERVER_NAME
	ServerAlias $CRDS_SERVER_ALIAS
	ServerAdmin webmaster@localhost
	DocumentRoot $CRDS_WEBSITE_PATH

        <Directory "$CRDS_WEBSITE_PATH"> 
            AllowOverride All

            # Prevent accessing .conf files
						<Files ~ "\.(conf)$">
							Deny from all
						</Files>

						# Set request header for prerender.io account
						RequestHeader set X-Prerender-Token "$CRDS_PRERENDER_IO_KEY"

						RewriteEngine On

						# Capture original request protocol
						RewriteCond %{HTTPS}s ^(on(s)|offs)$
						RewriteRule ^ - [env=proto:http%2]

						# Redirect to https if https is not already on and call is not from prerender.io
						RewriteCond %{HTTP_USER_AGENT} !Prerender
						RewriteCond %{HTTPS} !=on
						RewriteRule ^/?(.*) https://%{SERVER_NAME}/$1 [R,L]

						# Redirect BOT request to prerender.io
						# Only proxy the request to Prerender if it's a request for HTML
						RewriteCond %{HTTP_USER_AGENT} baiduspider|facebookexternalhit|twitterbot|rogerbot|linkedinbot|embedly|quora\ link\ preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator [NC,OR]
						RewriteCond %{QUERY_STRING} _escaped_fragment_
						RewriteRule ^(?!.*?(\.ico|\.svg|\.js|\.css|\.xml|\.less|\.png|\.jpg|\.jpeg|\.gif|\.pdf|\.doc|\.txt|\.ico|\.rss|\.zip|\.mp3|\.rar|\.exe|\.wmv|\.doc|\.avi|\.ppt|\.mpg|\.mpeg|\.tif|\.wav|\.mov|\.psd|\.ai|\.xls|\.mp4|\.m4a|\.swf|\.dat|\.dmg|\.iso|\.flv|\.m4v|\.torrent|\.ttf|\.woff))(index\.php|index\.html)?(.*) https://service.prerender.io/http://%{HTTP_HOST}/$3 [P,L]

						# Don't rewrite files or directories
						RewriteCond %{REQUEST_FILENAME} -f [OR]
						RewriteCond %{REQUEST_FILENAME} -d
						RewriteRule ^ - [L]

						# Rewrite for Corkboard alias
						# Commented out for US2924, will be added back after Corkboard go-live
						# RewriteRule ^corkboard/assets/(.*) /cork/assets/$1  [PT]

						# RewriteCond %{REQUEST_URI} !^corkboard/assets
						# RewriteRule corkboard(.*) /cork/index.html [PT]

						# Rewrite everything else to index.html to allow html5 state links
						RewriteRule ^ index.html [L]
        </Directory>

	# Commented out for US2924, will be added back after Corkboard go-live
	# Alias /cork "/var/www/corkboard"

	# Setup reverse proxy for gateway and content. This will 
	# eliminate CORS preflight calls, helping performance of the site.
	SSLProxyEngine on
	
	ProxyPass /proxy/gateway/ $CRDS_GATEWAY_URL retry=0
	ProxyPassReverse /proxy/gateway/ $CRDS_GATEWAY_URL 

	ProxyPass /proxy/content/ $CRDS_CMS_URL retry=0
	ProxyPassReverse /proxy/content/ $CRDS_CMS_URL 

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	# LogLevel info ssl:warn
  # LogLevel alert rewrite:trace3

	ErrorLog $${APACHE_LOG_DIR}/$CRDS_SERVER_ALIAS-error.log 
	CustomLog $${APACHE_LOG_DIR}/$CRDS_SERVER_ALIAS-access.log combined

	# For most configuration files from conf-available/, which are
	# enabled or disabled at a global level, it is possible to
	# include a line for only one particular virtual host. For example the
	# following line enables the CGI configuration for this host only
	# after it has been globally disabled with "a2disconf".
	#Include conf-available/serve-cgi-bin.conf
        
         <Directory "$CRDS_WEBSITE_PATH/assets">
           <filesmatch "\.(js)$">
             Header set Cache-Control "max-age=2678400, private"
           </filesmatch>
         </Directory>

</VirtualHost>

<VirtualHost *:443>
        # The ServerName directive sets the request scheme, hostname and port that
        # the server uses to identify itself. This is used when creating
        # redirection URLs. In the context of virtual hosts, the ServerName
        # specifies what hostname must appear in the request's Host: header to
        # match this virtual host. For the default virtual host (this file) this
        # value is not decisive as it is used as a last resort host regardless.
        # However, you must set it for any further virtual host explicitly.
        # ServerName www.example.com
	    ServerName $CRDS_SERVER_NAME
	    ServerAlias $CRDS_SERVER_ALIAS
      ServerAdmin webmaster@localhost
      DocumentRoot $CRDS_WEBSITE_PATH

	Redirect /discipleship https://discipleship.crossroads.net/
	# Commented out for sam mello, for testing new version of streaming
	# Redirect /live http://live.crossroads.net/
	# Commented out for US2924, will be added back after Corkboard go-live
  # Alias /cork "/var/www/corkboard"

	# Setup reverse proxy for gateway and content. This will 
	# eliminate CORS preflight calls, helping performance of the site.
	SSLProxyEngine on
	ProxyPass /proxy/gateway/ $CRDS_GATEWAY_URL retry=0
	ProxyPassReverse /proxy/gateway/ $CRDS_GATEWAY_URL
		
	ProxyPass /proxy/content/ $CRDS_CMS_URL retry=0
	ProxyPassReverse /proxy/content/ $CRDS_CMS_URL

        <Directory "$CRDS_WEBSITE_PATH">
            AllowOverride All
            
						# Prevent accessing .conf files
						<Files ~ "\.(conf)$">
							Deny from all
						</Files>

						# Set request header for prerender.io account
						RequestHeader set X-Prerender-Token "$CRDS_PRERENDER_IO_KEY"

						RewriteEngine On

						# Capture original request protocol
						RewriteCond %{HTTPS}s ^(on(s)|offs)$
						RewriteRule ^ - [env=proto:http%2]

						# Redirect to https if https is not already on and call is not from prerender.io
						RewriteCond %{HTTP_USER_AGENT} !Prerender
						RewriteCond %{HTTPS} !=on
						RewriteRule ^/?(.*) https://%{SERVER_NAME}/$1 [R,L]

						# Redirect BOT request to prerender.io
						# Only proxy the request to Prerender if it's a request for HTML
						RewriteCond %{HTTP_USER_AGENT} baiduspider|facebookexternalhit|twitterbot|rogerbot|linkedinbot|embedly|quora\ link\ preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator [NC,OR]
						RewriteCond %{QUERY_STRING} _escaped_fragment_
						RewriteRule ^(?!.*?(\.ico|\.svg|\.js|\.css|\.xml|\.less|\.png|\.jpg|\.jpeg|\.gif|\.pdf|\.doc|\.txt|\.ico|\.rss|\.zip|\.mp3|\.rar|\.exe|\.wmv|\.doc|\.avi|\.ppt|\.mpg|\.mpeg|\.tif|\.wav|\.mov|\.psd|\.ai|\.xls|\.mp4|\.m4a|\.swf|\.dat|\.dmg|\.iso|\.flv|\.m4v|\.torrent|\.ttf|\.woff))(index\.php|index\.html)?(.*) https://service.prerender.io/http://%{HTTP_HOST}/$3 [P,L]

						# Don't rewrite files or directories
						RewriteCond %{REQUEST_FILENAME} -f [OR]
						RewriteCond %{REQUEST_FILENAME} -d
						RewriteRule ^ - [L]

						# Rewrite for Corkboard alias
						# Commented out for US2924, will be added back after Corkboard go-live
						# RewriteRule ^corkboard/assets/(.*) /cork/assets/$1  [PT]

						# RewriteCond %{REQUEST_URI} !^corkboard/assets
						# RewriteRule corkboard(.*) /cork/index.html [PT]

						# Rewrite everything else to index.html to allow html5 state links
						RewriteRule ^ index.html [L]
        </Directory>

        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
        # error, crit, alert, emerg.
        # It is also possible to configure the loglevel for particular
        # modules, e.g.
        # LogLevel info ssl:warn
	      # LogLevel alert rewrite:trace6

        ErrorLog $${APACHE_LOG_DIR}/$CRDS_SERVER_ALIAS-error.log
        CustomLog $${APACHE_LOG_DIR}/$CRDS_SERVER_ALIAS-access.log combined

        # For most configuration files from conf-available/, which are
        # enabled or disabled at a global level, it is possible to
        # include a line for only one particular virtual host. For example the
        # following line enables the CGI configuration for this host only
        # after it has been globally disabled with "a2disconf".
        # Include conf-available/serve-cgi-bin.conf
        SSLEngine on
        SSLCertificateFile /etc/ssl/wildcard_crossroads_net.crt
        SSLCertificateKeyFile /etc/ssl/wildcard_crossroads_net.key
        SSLCertificateChainFile /etc/ssl/wildcard_crossroads_net.DigiCertCA.crt

        <Directory "$CRDS_WEBSITE_PATH/assets">
          <filesmatch "\.(js)$">
          Header set Cache-Control "max-age=2678400, private"
          </filesmatch>
        </Directory>
	
	# Begin Settings for mod_cache
	
	# Adjust header to avoid inappropriate invalidation
	<Location /proxy/content/api>
	  RequestHeader unset If-Modified-Since
	  RequestHeader unset If-None-Match
	  RequestHeader unset Cache-Control
	  RequestHeader unset Pragma
	  RequestHeader set Cache-Control "max-age=600"
	  RequestHeader unset Cookie
	  RequestHeader unset User-Agent
	  Header unset ETag
	  Header set Cache-Control "max-age=600"
	  FileETag None
	</Location>

	# Basic settings
	CacheQuickHandler off
	CacheLock on
	CacheLockPath /tmp/mod_cache-lock
	CacheLockMaxAge 5

	# Do not send back cookies in our responses
	CacheIgnoreHeaders Set-Cookie
	
	# Options to ignore client forcing of new request
	CacheIgnoreCacheControl on
	
	# Send back info to client
	CacheHeader on
	CacheDetailHeader on

	# Set expirations
	CacheDefaultExpire 600
	CacheMaxExpire 86400
	CacheLastModifiedFactor 0.5	
  # CacheStoreExpired On
	
	# Define Locations

	<Location /proxy/content/api/ContentBlock>
	  CacheEnable disk
	</Location>

	<Location /proxy/content/api/SiteConfig/1>
	  CacheEnable disk
	</Location>
	
	<Location /proxy/content/api/singleMedia>
	  CacheEnable disk
	</Location>

	<Location /proxy/content/api/message>
	  #CacheEnable disk
	</Location>

	<Location /proxy/content/api/messages> 
	  CacheEnable disk
	</Location>

	<Location /proxy/content/api/series>
	  CacheEnable disk
	</Location>

	<Location /proxy/content/api/SystemPage> 
	  CacheEnable disk
	</Location>
	
	<Location /proxy/content/api/feature>
	  CacheEnable disk
	</Location>

	<Location /proxy/content/api/features> 
	  CacheEnable disk
	</Location>

	<Location /proxy/content/api/groupresourcecategory> 
	  CacheEnable disk
	</Location>

	# End Location definitions

	# End mod_cache settings
	
</VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
